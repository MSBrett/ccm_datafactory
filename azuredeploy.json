{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aadResourceId": {
            "type": "string",
            "defaultValue": "[parameters('managementApiUri')]",
            "metadata": {
                "description": "The AAD Resource ID for the Azure Management API"
            }
        },
        "BlobContainerName": {
            "type": "string",
            "defaultValue": "[concat('ccm', uniqueString(resourceGroup().id, resourceGroup().location))]",
            "metadata": {
                "description": "Name of the blob container in the Azure Storage account."
            }
        },
        "DataFactoryName": {
            "type": "string",
            "defaultValue": "[concat('datafactory', uniqueString(resourceGroup().id, resourceGroup().location))]",
            "metadata": {
                "description": "Data Factory Name"
            }
        },
        "EnrollmentId": {
            "type": "string",
            "metadata": {
                "description": "The EA Enrollment ID"
            }
        },
        "KeyvaultName": {
            "type": "string",
            "defaultValue": "[concat('keyvault', uniqueString(resourceGroup().id, resourceGroup().location))]",
            "metadata": {
                "description": "The URI of the Azure Keyvault instance which keeps the service principal secret secret"
            }
        },
        "ManagementApiUri": {
            "type": "string",
            "defaultValue": "https://management.azure.com",
            "metadata": {
                "description": "The base URL for the Azure Management API"
            }
        },
        "ServicePrincipalId": {
            "type": "string",
            "metadata": {
                "description": "The ID of the service principal used to connect to the management API"
            }
        },
        "ServicePrincipalSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The name of the keyvault secret which contains the Service Principal password"
            }
        },
        "ServicePrincipalTenantId": {
            "type": "string",
            "metadata": {
                "description": "The ID of the AAD Tenant containing the service principal"
            }
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "[concat('storage', uniqueString(resourceGroup().id, resourceGroup().location))]",
            "metadata": {
                "description": "Name of the Azure storage account that contains the input/output data."
            }
        }
    },
    "variables": {
        "dataFactoryId": "[concat('Microsoft.DataFactory/factories/', parameters('DataFactoryName'))]",
        "datalakeUri": "[concat('https://', parameters('storageAccountName'), '.dfs.core.windows.net')]",
        "enterpriseReader": "[concat('svc-ea-reader-', uniqueString(resourceGroup().id, resourceGroup().location))]",
        "keyvaultUri": "[concat('https://', parameters('KeyvaultName') ,'.vault.azure.net/')]",
        "keyvaultSecretUri": "[concat('https://', parameters('KeyvaultName') ,'.vault.azure.net/secrets/', variables('enterpriseReader'), '?api-version=7.0')]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
    },
    "resources": [
        {
            "name": "[concat( parameters('KeyvaultName'), '/', parameters('StorageAccountName'))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "properties": {
                "value": "[listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyvaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ]
        },
        {
            "name": "[concat( parameters('KeyvaultName'), '/', variables('enterpriseReader'))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "properties": {
                "value": "[parameters('ServicePrincipalSecret')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyvaultName'))]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/azurerm')]",
            "type": "Microsoft.DataFactory/factories/linkedservices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('ManagementApiUri')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "AadServicePrincipal",
                    "servicePrincipalId": "[parameters('ServicePrincipalId')]",
                    "servicePrincipalKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ccmkeyvault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[variables('enterpriseReader')]"
                    },
                    "tenant": "[parameters('ServicePrincipalTenantId')]",
                    "aadResourceId": "[parameters('ManagementApiUri')]"
                }
            }
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/azurerm')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azurerm",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "RelativeUrl": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@dataset().RelativeUrl",
                        "type": "Expression"
                    }
                },
                "schema": []
            }
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/ccmdatalake')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ccmdatalake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "folderName": {
                        "type": "String"
                    },
                    "fileName": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@{dataset().fileName}",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@{dataset().folderName}",
                            "type": "Expression"
                        },
                        "fileSystem": "[parameters('BlobContainerName')]"
                    },
                    "columnDelimiter": ",",
                    "compressionCodec": "gzip",
                    "compressionLevel": "Optimal",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/linkedServices/ccmdatalake')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/ccmdatalake')]",
            "type": "Microsoft.DataFactory/factories/linkedservices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[variables('datalakeUri')]",
                    "accountKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ccmkeyvault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('StorageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/linkedServices/ccmkeyvault')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/ccmkeyvault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[variables('keyvaultUri')]"
                }
            },
            "dependsOn": [
                "[variables('dataFactoryId')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/ccmreportstorage')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ccmreportstorage",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "BaseUrl": {
                            "value": "@dataset().baseUrl",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "baseUrl": {
                        "type": "string",
                        "defaultValue": "https://ccmreportstorageeastus.blob.core.windows.net/armreports/"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/linkedServices/ccmreportstorage')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/ccmreportstorage')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "BaseUrl": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "@{linkedService().BaseUrl}",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": [
                "[variables('dataFactoryId')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/DownloadConsumptionData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DownloadRICharges",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['properties']['eventDate']"
                                        },
                                        "sink": {
                                            "name": "eventDate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['reservationOrderId']"
                                        },
                                        "sink": {
                                            "name": "reservationOrderId"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['description']"
                                        },
                                        "sink": {
                                            "name": "description"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['eventType']"
                                        },
                                        "sink": {
                                            "name": "eventType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['quantity']"
                                        },
                                        "sink": {
                                            "name": "quantity"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['amount']"
                                        },
                                        "sink": {
                                            "name": "amount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['currency']"
                                        },
                                        "sink": {
                                            "name": "currency"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['reservationOrderName']"
                                        },
                                        "sink": {
                                            "name": "reservationOrderName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['purchasingEnrollment']"
                                        },
                                        "sink": {
                                            "name": "purchasingEnrollment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['armSkuName']"
                                        },
                                        "sink": {
                                            "name": "armSkuName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['term']"
                                        },
                                        "sink": {
                                            "name": "term"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['region']"
                                        },
                                        "sink": {
                                            "name": "region"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['purchasingSubscriptionGuid']"
                                        },
                                        "sink": {
                                            "name": "purchasingSubscriptionGuid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['purchasingSubscriptionName']"
                                        },
                                        "sink": {
                                            "name": "purchasingSubscriptionName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['accountName']"
                                        },
                                        "sink": {
                                            "name": "accountName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['accountOwnerEmail']"
                                        },
                                        "sink": {
                                            "name": "accountOwnerEmail"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['departmentName']"
                                        },
                                        "sink": {
                                            "name": "departmentName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['costCenter']"
                                        },
                                        "sink": {
                                            "name": "costCenter"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['currentEnrollment']"
                                        },
                                        "sink": {
                                            "name": "currentEnrollment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingFrequency']"
                                        },
                                        "sink": {
                                            "name": "billingFrequency"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "azurerm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "RelativeUrl": {
                                        "value": "/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/reservationTransactions?api-version=2019-05-01&$filter=properties/EventDate+ge+2016-01-01+AND+properties/EventDate+le+2021-04-13",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@pipeline().parameters.EnrollmentId",
                                        "type": "Expression"
                                    },
                                    "fileName": "richarges.csv.gz"
                                }
                            }
                        ]
                    },
                    {
                        "name": "DownloadBalanceSummary",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "$['properties']['currency']"
                                        },
                                        "sink": {
                                            "name": "currency"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['beginningBalance']"
                                        },
                                        "sink": {
                                            "name": "beginningBalance"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['endingBalance']"
                                        },
                                        "sink": {
                                            "name": "endingBalance"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['newPurchases']"
                                        },
                                        "sink": {
                                            "name": "newPurchases"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['adjustments']"
                                        },
                                        "sink": {
                                            "name": "adjustments"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['utilized']"
                                        },
                                        "sink": {
                                            "name": "utilized"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['serviceOverage']"
                                        },
                                        "sink": {
                                            "name": "serviceOverage"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['chargesBilledSeparately']"
                                        },
                                        "sink": {
                                            "name": "chargesBilledSeparately"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['totalOverage']"
                                        },
                                        "sink": {
                                            "name": "totalOverage"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['totalUsage']"
                                        },
                                        "sink": {
                                            "name": "totalUsage"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['azureMarketplaceServiceCharges']"
                                        },
                                        "sink": {
                                            "name": "azureMarketplaceServiceCharges"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['billingFrequency']"
                                        },
                                        "sink": {
                                            "name": "billingFrequency"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['priceHidden']"
                                        },
                                        "sink": {
                                            "name": "priceHidden"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['newPurchasesDetails']"
                                        },
                                        "sink": {
                                            "name": "newPurchasesDetails"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['properties']['adjustmentDetails']"
                                        },
                                        "sink": {
                                            "name": "adjustmentDetails"
                                        }
                                    }
                                ],
                                "collectionReference": "",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "azurerm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "RelativeUrl": {
                                        "value": "/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/microsoft.consumption/balances?api-version=2019-10-01 ",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@pipeline().parameters.EnrollmentId",
                                        "type": "Expression"
                                    },
                                    "fileName": "balancesummary.csv.gz"
                                }
                            }
                        ]
                    },
                    {
                        "name": "DownloadRIRecommendationsShared",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['location']"
                                        },
                                        "sink": {
                                            "name": "location"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['sku']"
                                        },
                                        "sink": {
                                            "name": "sku"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['meterId']"
                                        },
                                        "sink": {
                                            "name": "meterId"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['term']"
                                        },
                                        "sink": {
                                            "name": "term"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['costWithNoReservedInstances']"
                                        },
                                        "sink": {
                                            "name": "costWithNoReservedInstances"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['recommendedQuantity']"
                                        },
                                        "sink": {
                                            "name": "recommendedQuantity"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['totalCostWithReservedInstances']"
                                        },
                                        "sink": {
                                            "name": "totalCostWithReservedInstances"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['netSavings']"
                                        },
                                        "sink": {
                                            "name": "netSavings"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['firstUsageDate']"
                                        },
                                        "sink": {
                                            "name": "firstUsageDate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['scope']"
                                        },
                                        "sink": {
                                            "name": "scope"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['lookBackPeriod']"
                                        },
                                        "sink": {
                                            "name": "lookBackPeriod"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['instanceFlexibilityRatio']"
                                        },
                                        "sink": {
                                            "name": "instanceFlexibilityRatio"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['instanceFlexibilityGroup']"
                                        },
                                        "sink": {
                                            "name": "instanceFlexibilityGroup"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['normalizedSize']"
                                        },
                                        "sink": {
                                            "name": "normalizedSize"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['recommendedQuantityNormalized']"
                                        },
                                        "sink": {
                                            "name": "recommendedQuantityNormalized"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['skuProperties']"
                                        },
                                        "sink": {
                                            "name": "skuProperties"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "azurerm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "RelativeUrl": {
                                        "value": "/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/reservationRecommendations?$filter=properties/scope+eq+'Shared'+AND+properties/lookBackPeriod+eq+'Last30Days'&api-version=2019-10-01",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@pipeline().parameters.EnrollmentId",
                                        "type": "Expression"
                                    },
                                    "fileName": "rirecommendationsshared.csv.gz"
                                }
                            }
                        ]
                    },
                    {
                        "name": "DownloadRIRecommendationsSingle",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "AbsoluteUrl": "$['nextLink']"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['location']"
                                        },
                                        "sink": {
                                            "name": "location"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['sku']"
                                        },
                                        "sink": {
                                            "name": "sku"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['meterId']"
                                        },
                                        "sink": {
                                            "name": "meterId"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['term']"
                                        },
                                        "sink": {
                                            "name": "term"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['costWithNoReservedInstances']"
                                        },
                                        "sink": {
                                            "name": "costWithNoReservedInstances"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['recommendedQuantity']"
                                        },
                                        "sink": {
                                            "name": "recommendedQuantity"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['totalCostWithReservedInstances']"
                                        },
                                        "sink": {
                                            "name": "totalCostWithReservedInstances"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['netSavings']"
                                        },
                                        "sink": {
                                            "name": "netSavings"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['firstUsageDate']"
                                        },
                                        "sink": {
                                            "name": "firstUsageDate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['scope']"
                                        },
                                        "sink": {
                                            "name": "scope"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['lookBackPeriod']"
                                        },
                                        "sink": {
                                            "name": "lookBackPeriod"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['instanceFlexibilityRatio']"
                                        },
                                        "sink": {
                                            "name": "instanceFlexibilityRatio"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['instanceFlexibilityGroup']"
                                        },
                                        "sink": {
                                            "name": "instanceFlexibilityGroup"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['normalizedSize']"
                                        },
                                        "sink": {
                                            "name": "normalizedSize"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['recommendedQuantityNormalized']"
                                        },
                                        "sink": {
                                            "name": "recommendedQuantityNormalized"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['skuProperties']"
                                        },
                                        "sink": {
                                            "name": "skuProperties"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "azurerm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "RelativeUrl": {
                                        "value": "/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/reservationRecommendations?$filter=properties/scope+eq+'Single'+AND+properties/lookBackPeriod+eq+'Last30Days'&api-version=2019-10-01",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@pipeline().parameters.EnrollmentId",
                                        "type": "Expression"
                                    },
                                    "fileName": "rirecommendationssingle.csv.gz"
                                }
                            }
                        ]
                    },
                    {
                        "name": "DownloadPricesheet",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DownloadPriceSheet",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TenantId": {
                                    "value": "@pipeline().parameters.TenantId",
                                    "type": "Expression"
                                },
                                "ClientId": {
                                    "value": "@pipeline().parameters.ClientId",
                                    "type": "Expression"
                                },
                                "EnrollmentId": {
                                    "value": "@pipeline().parameters.EnrollmentId",
                                    "type": "Expression"
                                },
                                "ClientSecret": {
                                    "value": "@pipeline().parameters.ClientSecret",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TenantId": {
                        "type": "string"
                    },
                    "ClientId": {
                        "type": "string"
                    },
                    "EnrollmentId": {
                        "type": "string"
                    },
                    "UsageDate": {
                        "type": "string"
                    },
                    "ClientSecret": {
                        "type": "string"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/datasets/azurerm')]",
                "[concat(variables('dataFactoryId'), '/datasets/ccmdatalake')]",
                "[concat(variables('dataFactoryId'), '/pipelines/DownloadPriceSheet')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/DownloadPriceSheet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Downloads the current pricesheet for the enrollment",
                "activities": [
                    {
                        "name": "Login",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.TenantId}/oauth2/v2.0/token",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "body": {
                                "value": "client_id=@{pipeline().parameters.ClientId}&scope=https%3A%2F%2Fmanagement.azure.com%2F.default&client_secret=@{activity('GetClientSecret').output.value}&grant_type=client_credentials",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetUrl",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Login",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 10,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://management.azure.com/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/pricesheets/download?api-version=2019-05-01&ln=en",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "Bearer @{activity('Login').output.access_token}",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DownloadFile",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "DeleteFile",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ccmreportstorage",
                                "type": "DatasetReference",
                                "parameters": {
                                    "baseUrl": {
                                        "value": "@{activity('GetUrl').output.properties.downloadurl}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@{pipeline().parameters.EnrollmentId}",
                                        "type": "Expression"
                                    },
                                    "fileName": {
                                        "value": "pricesheet.csv.gz",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "GetClientSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.ClientSecret",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "DeleteFile",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "TestDownloadUrl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@{pipeline().parameters.EnrollmentId}",
                                        "type": "Expression"
                                    },
                                    "fileName": {
                                        "value": "pricesheet.csv.gz",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "TestDownloadUrl",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetUrl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(equals(activity('GetUrl').output.properties.downloadurl, null))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Failure",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://doesnotwork.local",
                                        "method": "GET"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TenantId": {
                        "type": "string"
                    },
                    "ClientId": {
                        "type": "string"
                    },
                    "EnrollmentId": {
                        "type": "string"
                    },
                    "ClientSecret": {
                        "type": "string"
                    }
                },
                "annotations": []
            }
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/DownloadUsageDetails')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Downloads a day's worth of usage data - Actual or Amortized per the parameter",
                "activities": [
                    {
                        "name": "Login",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.TenantId}/oauth2/v2.0/token",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "body": {
                                "value": "client_id=@{pipeline().parameters.ClientId}&scope=https%3A%2F%2Fmanagement.azure.com%2F.default&client_secret=@{activity('GetClientSecret').output.value}&grant_type=client_credentials",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetUrl",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Login",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 10,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://management.azure.com/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/usageDetails/download?metric=@{pipeline().parameters.Metric}&$filter=properties/usageEnd eq '@{pipeline().parameters.UsageDate}'&api-version=2019-10-01",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "Bearer @{activity('Login').output.access_token}",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DownloadFile",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "DeleteFile",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ccmreportstorage",
                                "type": "DatasetReference",
                                "parameters": {
                                    "baseUrl": {
                                        "value": "@{activity('GetUrl').output.properties.downloadurl}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@{pipeline().parameters.EnrollmentId}/@{formatDateTime(pipeline().parameters.UsageDate, 'yyyy')}/@{formatDateTime(pipeline().parameters.UsageDate, 'MM')}/@{formatDateTime(pipeline().parameters.UsageDate, 'dd')}",
                                        "type": "Expression"
                                    },
                                    "fileName": {
                                        "value": "@{pipeline().parameters.Metric}.csv.gz",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "GetClientSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.ClientSecret",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "DeleteFile",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "TestDownloadUrl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ccmdatalake",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": {
                                        "value": "@{pipeline().parameters.EnrollmentId}/@{formatDateTime(pipeline().parameters.UsageDate, 'yyyy')}/@{formatDateTime(pipeline().parameters.UsageDate, 'MM')}/@{formatDateTime(pipeline().parameters.UsageDate, 'dd')}",
                                        "type": "Expression"
                                    },
                                    "fileName": {
                                        "value": "@{pipeline().parameters.Metric}.csv.gz",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "TestDownloadUrl",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetUrl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(equals(activity('GetUrl').output.properties.downloadurl, null))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Failure",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://doesnotwork.local",
                                        "method": "GET"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TenantId": {
                        "type": "string"
                    },
                    "ClientId": {
                        "type": "string"
                    },
                    "EnrollmentId": {
                        "type": "string"
                    },
                    "UsageDate": {
                        "type": "string"
                    },
                    "ClientSecret": {
                        "type": "string"
                    },
                    "Metric": {
                        "type": "string",
                        "defaultValue": "actualcost"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/datasets/ccmreportstorage')]",
                "[concat(variables('dataFactoryId'), '/datasets/ccmdatalake')]",
                "[concat(variables('dataFactoryId'), '/linkedServices/ccmkeyvault')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/GetUsageCurrent')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Downloads MTD consumption data (and the entire previous month if within the first week)",
                "activities": [
                    {
                        "name": "SetUsageDate1",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "IsWeek1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "UsageDate1",
                            "value": {
                                "value": "@variables('UsageStartDate')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SetUsageDate2",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SetUsageDate1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "UsageDate2",
                            "value": {
                                "value": "@variables('UsageStartDate')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SetRange",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SetUsageDate2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('UsageDate2'), variables('UsageEndDate'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "IncrementUsageDate1",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Append variable1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageDate1",
                                        "value": {
                                            "value": "@adddays(variables('UsageDate2'), 1)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "IncrementUsageDate2",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "IncrementUsageDate1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageDate2",
                                        "value": {
                                            "value": "@variables('UsageDate1')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Append variable1",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageDates",
                                        "value": {
                                            "value": "@formatDateTime(variables('UsageDate1'), 'yyyy-MM-dd')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.01:00:00"
                        }
                    },
                    {
                        "name": "DownloadRange",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "SetRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('UsageDates')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 8,
                            "activities": [
                                {
                                    "name": "DownloadActualCosts",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "DownloadUsageDetails",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TenantId": {
                                                "value": "@pipeline().parameters.TenantId",
                                                "type": "Expression"
                                            },
                                            "ClientId": {
                                                "value": "@pipeline().parameters.ClientId",
                                                "type": "Expression"
                                            },
                                            "EnrollmentId": {
                                                "value": "@pipeline().parameters.EnrollmentId",
                                                "type": "Expression"
                                            },
                                            "UsageDate": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "ClientSecret": {
                                                "value": "@pipeline().parameters.ClientSecret",
                                                "type": "Expression"
                                            },
                                            "Metric": "actualcost"
                                        }
                                    }
                                },
                                {
                                    "name": "DownloadAmortizedCosts",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "DownloadUsageDetails",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TenantId": {
                                                "value": "@pipeline().parameters.TenantId",
                                                "type": "Expression"
                                            },
                                            "ClientId": {
                                                "value": "@pipeline().parameters.ClientId",
                                                "type": "Expression"
                                            },
                                            "EnrollmentId": {
                                                "value": "@pipeline().parameters.EnrollmentId",
                                                "type": "Expression"
                                            },
                                            "UsageDate": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "ClientSecret": {
                                                "value": "@pipeline().parameters.ClientSecret",
                                                "type": "Expression"
                                            },
                                            "Metric": "amortizedcost"
                                        }
                                    }
                                },
                                {
                                    "name": "DownloadReservationSummaries",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationOrderId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationOrderId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['skuName']"
                                                    },
                                                    "sink": {
                                                        "name": "skuName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "reservedHours",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usageDate']"
                                                    },
                                                    "sink": {
                                                        "name": "usageDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "usedHours",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['minUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "minUtilizationPercentage",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['avgUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "avgUtilizationPercentage",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['maxUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "maxUtilizationPercentage",
                                                        "type": "Decimal"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "azurerm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "RelativeUrl": {
                                                    "value": "/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/reservationsummaries?api-version=2019-10-01&grain=daily&$filter=properties/UsageDate+eq+@{item()}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ccmdatalake",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@{pipeline().parameters.EnrollmentId}/@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}",
                                                    "type": "Expression"
                                                },
                                                "fileName": "riusagesummary.csv.gz"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "SetUsageEndDate",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "UsageEndDate",
                            "value": {
                                "value": "@formatDateTime(formatDateTime(utcnow(), 'yyyy-MM-dd'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "IsWeek1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "SetUsageEndDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@less(dayOfMonth(utcnow()), 7)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "SetCurrentMonth",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageStartDate",
                                        "value": {
                                            "value": "@formatDateTime(formatDateTime(startOfMonth(utcnow()), 'yyyy-MM-dd'))",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "SetPreviousMonth",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageStartDate",
                                        "value": {
                                            "value": "@formatDateTime(subtractFromTime(startOfMonth(utcnow()), 1, 'Month'), 'yyyy-MM-dd')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "DownloadLatest",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "SetUsageEndDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DownloadConsumptionData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TenantId": {
                                    "value": "@pipeline().parameters.TenantId",
                                    "type": "Expression"
                                },
                                "ClientId": {
                                    "value": "@pipeline().parameters.ClientId",
                                    "type": "Expression"
                                },
                                "EnrollmentId": {
                                    "value": "@pipeline().parameters.EnrollmentId",
                                    "type": "Expression"
                                },
                                "UsageDate": {
                                    "value": "@variables('UsageEndDate')",
                                    "type": "Expression"
                                },
                                "ClientSecret": {
                                    "value": "@pipeline().parameters.ClientSecret",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TenantId": {
                        "type": "string",
                        "defaultValue": "[parameters('ServicePrincipalTenantId')]"
                    },
                    "ClientId": {
                        "type": "string",
                        "defaultValue": "[parameters('ServicePrincipalId')]"
                    },
                    "EnrollmentId": {
                        "type": "string",
                        "defaultValue": "[parameters('EnrollmentId')]"
                    },
                    "ClientSecret": {
                        "type": "string",
                        "defaultValue": "[variables('keyvaultSecretUri')]"
                    }
                },
                "variables": {
                    "UsageEndDate": {
                        "type": "String"
                    },
                    "UsageDate1": {
                        "type": "String"
                    },
                    "UsageDate2": {
                        "type": "String"
                    },
                    "UsageDates": {
                        "type": "Array"
                    },
                    "UsageStartDate": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/pipelines/DownloadConsumptionData')]",
                "[concat(variables('dataFactoryId'), '/pipelines/DownloadUsageDetails')]",
                "[concat(variables('dataFactoryId'), '/datasets/azurerm')]",
                "[concat(variables('dataFactoryId'), '/datasets/ccmdatalake')]"
            ]
        },
        {
            "name": "[concat(parameters('DataFactoryName'), '/GetUsageRange')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Downloads consumption data for the specified data range.",
                "activities": [
                    {
                        "name": "SetUsageDate1",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "UsageDate1",
                            "value": {
                                "value": "@formatDateTime(pipeline().parameters.UsageStartDate)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SetUsageDate2",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SetUsageDate1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "UsageDate2",
                            "value": {
                                "value": "@formatDateTime(pipeline().parameters.UsageStartDate)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SetRange",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SetUsageDate2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('UsageDate2'), formatDateTime(pipeline().parameters.UsageEndDate))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "IncrementUsageDate1",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "AppendUsageDates",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageDate1",
                                        "value": {
                                            "value": "@adddays(variables('UsageDate2'), 1)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "IncrementUsageDate2",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "IncrementUsageDate1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageDate2",
                                        "value": {
                                            "value": "@variables('UsageDate1')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "AppendUsageDates",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "UsageDates",
                                        "value": {
                                            "value": "@formatDateTime(variables('UsageDate1'), 'yyyy-MM-dd')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.01:00:00"
                        }
                    },
                    {
                        "name": "DownloadRange",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "SetRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('UsageDates')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 8,
                            "activities": [
                                {
                                    "name": "DownloadActualCosts",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "DownloadUsageDetails",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TenantId": {
                                                "value": "@pipeline().parameters.TenantId",
                                                "type": "Expression"
                                            },
                                            "ClientId": {
                                                "value": "@pipeline().parameters.ClientId",
                                                "type": "Expression"
                                            },
                                            "EnrollmentId": {
                                                "value": "@pipeline().parameters.EnrollmentId",
                                                "type": "Expression"
                                            },
                                            "UsageDate": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "ClientSecret": {
                                                "value": "@pipeline().parameters.ClientSecret",
                                                "type": "Expression"
                                            },
                                            "Metric": "actualcost"
                                        }
                                    }
                                },
                                {
                                    "name": "DownloadAmortizedCosts",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "DownloadUsageDetails",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TenantId": {
                                                "value": "@pipeline().parameters.TenantId",
                                                "type": "Expression"
                                            },
                                            "ClientId": {
                                                "value": "@pipeline().parameters.ClientId",
                                                "type": "Expression"
                                            },
                                            "EnrollmentId": {
                                                "value": "@pipeline().parameters.EnrollmentId",
                                                "type": "Expression"
                                            },
                                            "UsageDate": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "ClientSecret": {
                                                "value": "@pipeline().parameters.ClientSecret",
                                                "type": "Expression"
                                            },
                                            "Metric": "amortizedcost"
                                        }
                                    }
                                },
                                {
                                    "name": "DownloadReservationSummaries",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationOrderId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationOrderId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['skuName']"
                                                    },
                                                    "sink": {
                                                        "name": "skuName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "reservedHours",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usageDate']"
                                                    },
                                                    "sink": {
                                                        "name": "usageDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "usedHours",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['minUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "minUtilizationPercentage",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['avgUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "avgUtilizationPercentage",
                                                        "type": "Decimal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['maxUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "maxUtilizationPercentage",
                                                        "type": "Decimal"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "azurerm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "RelativeUrl": {
                                                    "value": "/providers/Microsoft.Billing/billingAccounts/@{pipeline().parameters.EnrollmentId}/providers/Microsoft.Consumption/reservationsummaries?api-version=2019-10-01&grain=daily&$filter=properties/UsageDate+eq+@{item()}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ccmdatalake",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@{pipeline().parameters.EnrollmentId}/@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}",
                                                    "type": "Expression"
                                                },
                                                "fileName": "riusagesummary.csv.gz"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TenantId": {
                        "type": "string",
                        "defaultValue": "[parameters('ServicePrincipalTenantId')]"
                    },
                    "ClientId": {
                        "type": "string",
                        "defaultValue": "[parameters('ServicePrincipalId')]"
                    },
                    "EnrollmentId": {
                        "type": "string",
                        "defaultValue": "[parameters('EnrollmentId')]"
                    },
                    "ClientSecret": {
                        "type": "string",
                        "defaultValue": "[variables('keyvaultSecretUri')]"
                    },
                    "UsageStartDate": {
                        "type": "string",
                        "defaultValue": "2021-03-01"
                    },
                    "UsageEndDate": {
                        "type": "string",
                        "defaultValue": "2021-04-01"
                    }
                },
                "variables": {
                    "UsageDate1": {
                        "type": "String"
                    },
                    "UsageDate2": {
                        "type": "String"
                    },
                    "UsageDates": {
                        "type": "Array"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('dataFactoryId'), '/pipelines/DownloadUsageDetails')]",
                "[concat(variables('dataFactoryId'), '/datasets/azurerm')]",
                "[concat(variables('dataFactoryId'), '/datasets/ccmdatalake')]"
            ]
        },
        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[parameters('DataFactoryName')]",
            "location": "[resourceGroup().location]",
            "properties": {
            },
            "dependsOn": [
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [

            ]
        },
        {
            "name": "[parameters('KeyvaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('KeyvaultName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('DataFactoryName'))]"
            ],
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('DataFactoryName')), '2018-06-01', 'Full').identity.tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('DataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "Get"
                            ]
                        }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                }
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "allowBlobPublicAccess": false,
                "isHnsEnabled": true,
                "minimumTlsVersion": "TLS1_2"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[concat('default/', parameters('blobContainerName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
                    ]
                }
            ]
        }
    ]
}